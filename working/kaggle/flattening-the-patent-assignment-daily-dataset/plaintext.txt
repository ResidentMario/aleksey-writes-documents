This dataset is provided in the form of an XML dump. XML is data description format which saves its contents within a tree structure of HTML tags. It was very popular around the turn of the century, when its HTML-like format and document object model semantics were cited as the future of data storage on the web (particularly with reference to the semantic web). Eventually however a combination of the format's verbosity, lethargy, and the never-quite realization of the semantic web caused it to lose its place, in most modern applications, to the JSON format. XML nevertheless remains present in many applications and datasets, including this one. In this notebook we demonstrate how to go about "flattening" an XML tree structure, which can have many levels of hierarchy, into a flat CSV file, which has only one (the rows). lxml is a library in Python designed for working with XML data. First we use it to parse the input data into a tree... ...then we get the node at the beginning of the tree. This is usually termed the "root". In this case our root node contains three attributes, two junk ones with the date and a bit of attribution information and one "real" one, the last one, containing all of the patent assignments. Within the XML hierarchy each of these patents is a sub-element of the root, which lxml represents in Python as a list of elements. We can see what a patent assignment node looks like with tostring: Let's serialize this into a pandas DataFrame, which will be easier to work with. The following long method does this on a case-by-case basis, and we'll loop through the list to extract all our data. Methods of note are: Here's our result: Much easier to work with! 