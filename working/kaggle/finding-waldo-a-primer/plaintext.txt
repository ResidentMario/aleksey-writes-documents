This dataset contains several thousand Waldo and not-Waldo images. To start doing image analysis, therefore, we need to first understand what the directory structure is. The top-level input directory (once you create your Kernel) contains the following folders: These folders are pretty self-explanatory: they contain splits of the data at different image sizes. They each then further subdivide into two more subdirectories, waldo and notwaldo: waldo contains images with Waldo in them, and notwaldo, images without. The only exception is original-images, which merely contains a handful of full scenes. Although the filenames are slightly different, the contents of the scenes depicted in the dataset are the same across folders. In the following plot check out the same scene with Waldo in different "close-up" levels of resolution: 256 by 256, 128 by 128, and finally, 64 by 64. There are far more 64x64 samples than there are 128x128 samples, and far more of those than there are 256x256 ones: There are (logically) far more pictures of not-Waldo than there are with Waldo in them, and many other difficulties in this dataset. We can see much of this by taking a look at a few Waldo samples: Here we see the difference in scales: the second Waldo here is much bigger than the first or last. The second Waldo also has a big problem with occlusion, being cut off above the nose, while the third Waldo doesn't have the red-white pattern very strongly that we would need to have to find him (the pattern is there, sort of, but hard to isolate). Overall this is a very difficult and kind of silly but also potentially very fun image classification problem. Go ahead and try your hand at it; can you find Waldo? Here are some algorithmic approaches people have taken to finding Waldo: 