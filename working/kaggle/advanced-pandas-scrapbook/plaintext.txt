One of the most common mapping operations is replacing missing values. It's easy to do this using map or apply and the handy pd.is_null() function, but this is often not necessary, because pandas provides a really handy method for this problem: fillna. By default, values which are missing data in a Series or DataFrame are reported with a NaN (Not a Number) flag. fillna provides a few different strategies for mitigating such data. For example, we can simply replace each NaN with an "Unknown": Or we could fill each missing value with the first non-null value that appears sometime after the given record in the database. This is known as the backfill strategy: Backfilling makes a lot of sense with certain kinds of data (specifically time-series data). Sadly it will not help us in this specific case, however. For more fillna strategies check out the official function documentation. Alternatively, we may have a non-null value that we would like to replace. For example, suppose that since this dataset was published, reviewer Kerin O'Keefe has changed her Twitter handle from @kerinokeefe to @kerino. To represent this change in the dataset, we could go through each value, check if it is equivalent to the old handle, and return a new handle using map or apply. However pandas provides a very useful shortcut method that makes this a lot less painless: 