I've historically written any neural network work I've done in Keras. With Keras sunsetting and folding into TensorFlow soon, I decided that it was a good time to switch to PyTorch (see "State of ML frameworks (late 2019)" for a single-page summary of the current state of ML framework choices). I chose PyTorch over TensorFlow because PyTorch is "more Pythonic", and so easer to write and debug models in, something I place a lot of value on. This notebook compares a Keras model to a PyTorch model. It's essentially my notes on the following blog post: "A Layman guide to moving from Keras to Pytorch". This model is one that was used for one of the Quora NLP competitions. The blog post doesn't include the training routine for the Keras model. But we can imagine what that looks like; it's not too complex; build a training set, build a validation set, plug them into the right functions. With PyTorch this is a lot more complex. This next section presented without comment. A quick note that poutyne is a small Python package that turns the model evaluation loop into something you run with an API that is an exact mirror of Keras's. 