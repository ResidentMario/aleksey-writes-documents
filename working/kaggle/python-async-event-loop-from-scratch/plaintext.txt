The presentation "Get to grips with asnycio in Python 3" works through an implementation of async from scratch. There's a few other resources I am looking at as well. This notebook is me implementing these ideas (most prominently, the event loop) myself. This first code block defines an event loop and runs a simple counting generator through it. The elegance comes from popping a task off of the queue, running it, and then if it is still not done, putting it back on the queue, at the last index position. Suppose that we have a task that we want to schedule to run at a certain time (in a best-effort manner). Here's how we achieve this using a generator. That's it! 