Python ships with a logging module which supports five levels: DEBUG, INFO, WARNING, ERROR, CRITICAL. To raise an error at a certain level use the module method: import logging; logging.debug(...) Further configuration of e.g. message format flows from the basicConfig method, e.g.: logging.basicConfig(filename='app.log', filemode='w', format='%(name)s - %(levelname)s - %(message)s') There is a level parameter on basicConfig that controls what level of messages get written to the log. To include an error stack trace: except Exception as e:  logging.error("Exception occurred", exc_info=True) You can also use the logging.exception shortcut which is basically this method with exc_info=True. 