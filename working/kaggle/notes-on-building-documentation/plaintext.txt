The content split presented in this talk:  Tutorials are oriented towards the user's learning. Their main purpose is to make it as easy as possible for new users to gain confidence with your product. Analogy: lesson plan for a child. Discussions are more theoretical pages (e.g. blog posts) describing the larger problems being addressed by the software. Analogy: a book on the science of cooking. Discussions and tutorials are most useful when we are studying. How-to guides and references are most useful when you are coding. Kubernetes pretty explicitly organizes into these four tranches.  To be clear, the divisions between placements of the pieces are kind of fuzzy. In particular, what counts as a tutorial and what counts as a how-to. Tutorial How-to guides Discussion References Note that there is no set ontology so things get very confusing very quickly. 