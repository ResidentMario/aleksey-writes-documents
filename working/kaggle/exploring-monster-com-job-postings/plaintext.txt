Monster.com is one of the largest job sites in the United States, providing a huge clearinghouse for employers and employee prospects to find one another on. In this notebook we will explore this dataset, a sample of all Monster.com job postings in the United States. We will hopefully learn a thing or two about what a job listing looks like in the modern day. We will probe the basic dataset attributes and hopefully uncover some interesting observations from the data! This exploratory data analytics notebook is recommended for beginners and those interested in probing this dataset further. Feel free to fork this notebook and/or copy the code here and explore further on your own!  Many of the fields are not interesting (some as a function of the filtering applied to this dataset) and can be dropped. Some of the rest of the fields are very sparse. The location field often has a copy of the job_description in it, for some reason; these need to be filtered out. The information in the salary varies by a lot in terms of formatting, in addition to being left blank most of the time anyway. job_type ought to be distilled into full-time, part-time, and other. Healthcare services seems to make heavy use of Monster.com, as does Retail and a few others. Non-managerial experience seems to have an imposing presence on the platform, but that seems quite aspirational... Splitting between yearly and hourly pay rates, what are the salaries that are on tap? The salaries on tap on Monster.com are probably below the US distribution, in my estimation. Are all of those Experienced (Non-Manager) jobs seem rather aspirational... To dig in further, I would suggest you try breaking this data down by sector! Of course the most important field in the dataset is the job descriptions. But the job descriptions tend to be very long, including a preppy, mostly useless bit about what the company does and why it's awesome. We can do better by slimming the document down to the most important sentences. There are a bunch of different text summarization schemes for doing this sort of thing, but let's do a simple and fun one: sentence ranking. In this scheme, we will weigh each sentence by how recurrent non-stopwords in that sentence is: the most times it appears in the overall document, the more important the sentence in question is (stopwords are words like "by", "if", "when"). We average this by the length of the sentence to get the sentence's overall interestingness, and pick the n sentences with the highest score. Simple! The following block of code implements this scheme. It uses the nltk library; you can see the original source, with documentation, here. Unfortunately the corpus of descriptions is pretty badly formatted, and the sentences in this document are obnoxiously long.  Still, applying this technique can show up something interesting about the kinds of words that matter in a job description. That's all for here folks! Try applying more cleaning and more (and more sophisticated!) NLP techniques to the job descriptions in this dataset. What further can you learn about the US job market by seeing what comes up on Monster.com? 